var DataMerge={MySQL:{tables:[],tableOffset:0,errors:0,limit:100,timeout:2000,mergeData:function(b,a,c){$.ajax({url:"api/merge/data",type:"POST",data:{table:b,columns:a,offset:c,limit:DataMerge.MySQL.limit,},success:function(d){if(d.success){$(d.message).each(function(){if(this.update&&d.offset&&d.offset>DataMerge.MySQL.limit){$("#log").find(".log-item:first").html($("<div/>",{"class":this.label}).append(this.text))}else{$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":this.label,}).append(this.text)))}})}else{DataMerge.MySQL.errors++;$(d.message).each(function(){$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":"text-danger",}).append(d.message)))})}if(DataMerge.MySQL.tableOffset in DataMerge.MySQL.tables){setTimeout(function(){if(d.offset&&d.offset>=DataMerge.MySQL.limit){DataMerge.MySQL.mergeData(DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["table"],DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["columns"],d.offset)}else{DataMerge.MySQL.tableOffset++;if(DataMerge.MySQL.tableOffset in DataMerge.MySQL.tables){DataMerge.MySQL.mergeData(DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["table"],DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["columns"],0)}else{$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":DataMerge.MySQL.errors>0?"text-danger":"text-success",}).append("Merging completed with <strong>"+DataMerge.MySQL.errors+"</strong> errors!")))}}},DataMerge.MySQL.timeout)}else{$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":DataMerge.MySQL.errors>0?"text-danger":"text-success",}).append("Merging completed with <strong>"+DataMerge.MySQL.errors+"</strong> errors!")))}},error:function(f,d,e){DataMerge.MySQL.errors++;$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":"text-danger",}).append(d)))}})},mergeStructure:function(b,a){$.ajax({url:"api/merge/structure",type:"POST",data:{table:b,truncate:a,},success:function(c){DataMerge.MySQL.tableOffset++;if(c.success){$(c.message).each(function(){if(this.error){DataMerge.MySQL.errors++}$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":this.label,}).append(this.text)))})}else{DataMerge.MySQL.errors++;$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":"text-danger",}).append(c.message)))}if(DataMerge.MySQL.tableOffset in DataMerge.MySQL.tables){setTimeout(function(){DataMerge.MySQL.mergeStructure(DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["table"],DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["truncate"])},DataMerge.MySQL.timeout)}else{$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":DataMerge.MySQL.errors>0?"text-danger":"text-success",}).append("Tables structure merged with <strong>"+DataMerge.MySQL.errors+"</strong> errors!")));$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":"text-success",}).append("Merging tables data...")));DataMerge.MySQL.tableOffset=0;DataMerge.MySQL.mergeData(DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["table"],DataMerge.MySQL.tables[DataMerge.MySQL.tableOffset]["columns"],0)}},error:function(e,c,d){DataMerge.MySQL.errors++;$("#log").prepend($("<div/>",{"class":"log-item"}).append($("<div/>",{"class":"text-danger",}).append(c)))}})}}};